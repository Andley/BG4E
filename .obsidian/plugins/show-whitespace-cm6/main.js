/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var g=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var m=(a,t)=>{for(var i in t)g(a,i,{get:t[i],enumerable:!0})},S=(a,t,i,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of d(t))!p.call(a,e)&&e!==i&&g(a,e,{get:()=>t[e],enumerable:!(s=w(t,e))||s.enumerable});return a};var u=a=>S(g({},"__esModule",{value:!0}),a);var k={};m(k,{default:()=>W});module.exports=u(k);var r=require("obsidian"),c=require("@codemirror/view");var o=require("obsidian"),h=class extends o.PluginSettingTab{constructor(t,i){super(t,i),this.plugin=i}async save(){await this.plugin.updateSettings(this.newSettings)}async display(){await this.plugin.loadSettings(),this.reset()}async reset(){this.newSettings=JSON.parse(JSON.stringify(this.plugin.settings)),this.drawElements()}drawElements(){let t=this.plugin.manifest.id,i=this.plugin.manifest.name;this.containerEl.empty(),this.containerEl.addClass(t),new o.Setting(this.containerEl).setHeading().setName(i),new o.Setting(this.containerEl).setName("Save settings").setClass(t+"-save-reset").addButton(s=>s.setIcon("reset").setTooltip("Reset to previously saved (or generated) values").onClick(()=>{this.reset(),console.log("(SW-CM6) Configuration reset")})).addButton(s=>{s.setIcon("save").setTooltip("Save current values").onClick(async()=>{await this.save()}),this.saveButton=s.buttonEl}),new o.Setting(this.containerEl).setName("Suppress plugin styles").setDesc("Disable the plugin's default styles. You will need to provide your own CSS snippets to customize the appearance of whitespace.").addToggle(s=>s.setValue(this.newSettings.disablePluginStyles).onChange(async e=>{let n=e!=this.newSettings.disablePluginStyles;this.newSettings.disablePluginStyles=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show blockquote markers").setDesc("Always display the leading '>' for blockquotes in Live Preview mode.").addToggle(s=>s.setValue(this.newSettings.showBlockquoteMarkers).onChange(async e=>{let n=e!=this.newSettings.showBlockquoteMarkers;this.newSettings.showBlockquoteMarkers=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setName("Highlight List Markers").setDesc("Add a visual style to the space reserved by list markers (e.g., '-', '1.').").addToggle(s=>s.setValue(this.newSettings.outlineListMarkers).onChange(async e=>{let n=e!=this.newSettings.outlineListMarkers;this.newSettings.outlineListMarkers=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setHeading().setName("Whitespace"),this.containerEl.createEl("p",{text:"By default, this plugin will show leading and trailing whitespace including marks for line endings, hard breaks, and tabs."}),new o.Setting(this.containerEl).setName("Show all whitespace").setDesc("Display markers for all whitespace characters, including those between words.").addToggle(s=>s.setValue(this.newSettings.showAllWhitespace).onChange(async e=>{let n=e!=this.newSettings.showAllWhitespace;this.newSettings.showAllWhitespace=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show consecutive whitespace").setDesc("Display markers only for multiple consecutive whitespace characters between words (included in 'Show All Whitespace').").addToggle(s=>s.setValue(this.newSettings.showExtraWhitespace).onChange(async e=>{e=e||this.newSettings.showAllWhitespace;let n=e!=this.newSettings.showExtraWhitespace;this.newSettings.showExtraWhitespace=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show line endings").setDesc("Display markers for line endings (different from hard line breaks).").addToggle(s=>s.setValue(this.newSettings.showLineEndings).onChange(async e=>{let n=e!=this.newSettings.showLineEndings;this.newSettings.showLineEndings=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setHeading().setName("Content types"),this.containerEl.createEl("p",{text:"The following settings allow you to enable or disable the display of whitespace characters within the document. Unless otherwise noted, the appearance of whitespace follows the settings above."}),new o.Setting(this.containerEl).setName("Show frontmatter whitespace").setDesc("Display whitespace characters in YAML frontmatter (properties).").addToggle(s=>s.setValue(this.newSettings.showFrontmatterWhitespace).onChange(async e=>{e=e||this.newSettings.showAllWhitespace;let n=e!=this.newSettings.showFrontmatterWhitespace;this.newSettings.showFrontmatterWhitespace=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show table whitespace").setDesc("Display leading or trailing whitespace characters in tables.").addToggle(s=>s.setValue(this.newSettings.showTableWhitespace).onChange(async e=>{e=e||this.newSettings.showAllWhitespace;let n=e!=this.newSettings.showTableWhitespace;this.newSettings.showTableWhitespace=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show code block whitespace").setDesc("Display leading/trailing whitespace characters in code blocks (included in 'Show All Code Block Whitespace')").addToggle(s=>s.setValue(this.newSettings.showCodeblockWhitespace).onChange(async e=>{e=e||this.newSettings.showAllCodeblockWhitespace;let n=e!=this.newSettings.showCodeblockWhitespace;this.newSettings.showCodeblockWhitespace=e,n&&this.drawElements()})),new o.Setting(this.containerEl).setName("Show all code block whitespace").setDesc("Display all whitespace characters in code blocks, making them look more like a code editor. This will override the settings above.").addToggle(s=>s.setValue(this.newSettings.showAllCodeblockWhitespace).onChange(async e=>{let n=e!=this.newSettings.showAllCodeblockWhitespace;this.newSettings.showAllCodeblockWhitespace=e,n&&this.drawElements()}))}hide(){this.save()}};var f={version:{major:0,minor:0,patch:0},disablePluginStyles:!1,showBlockquoteMarkers:!1,showFrontmatterWhitespace:!0,showExtraWhitespace:!1,showLineEndings:!0,showTableWhitespace:!0,showCodeblockWhitespace:!1,showAllWhitespace:!1,outlineListMarkers:!1,enabled:!0},l=class extends r.Plugin{constructor(){super(...arguments);this.cmExtension=[];this.classList=[];this.onExternalSettingsChange=(0,r.debounce)(async()=>{this.settings=Object.assign({},this.settings,await this.loadData()),this.updateSettings(this.settings),console.debug("(SW-CM6) external settings changed")},2e3,!0)}async onload(){console.info("loading Show Whitespace (SW-CM6) v"+this.manifest.version),await this.loadSettings(),this.addSettingTab(new h(this.app,this)),this.initClasses(),this.registerEditorExtension(this.cmExtension),this.handleExtension(!0);let i={id:"whitespace-toggle",name:"Toggle Show Whitespace",icon:"pilcrow",callback:async()=>this.toggleExtension(this)};this.addCommand(i)}handleExtension(i){console.log("(SW-CM6) enabled",this.settings.enabled),this.removeClasses(),this.initClasses(),this.cmExtension.length=0,this.settings.enabled&&(this.cmExtension.push((0,c.highlightWhitespace)()),this.cmExtension.push((0,c.highlightTrailingWhitespace)())),i||this.app.workspace.updateOptions()}initClasses(){this.classList=[this.manifest.id],(!this.settings.enabled||this.settings.disablePluginStyles)&&this.classList.push("swcm6-nix-plugin-styles"),this.settings.enabled&&(this.settings.showBlockquoteMarkers&&this.classList.push("swcm6-show-blockquote-markers"),this.settings.showCodeblockWhitespace&&this.classList.push("swcm6-show-codeblock-whitespace"),this.settings.showAllCodeblockWhitespace&&this.classList.push("swcm6-show-all-codeblock-whitespace"),this.settings.showExtraWhitespace&&this.classList.push("swcm6-show-extra-whitespace"),this.settings.showLineEndings&&this.classList.push("swcm6-show-line-endings"),this.settings.showFrontmatterWhitespace&&this.classList.push("swcm6-show-frontmatter-whitespace"),this.settings.showTableWhitespace&&this.classList.push("swcm6-show-table-whitespace"),this.settings.showAllWhitespace&&this.classList.push("swcm6-show-all-whitespace"),this.settings.outlineListMarkers&&this.classList.push("swcm6-outline-list-markers")),document.body.addClasses(this.classList)}removeClasses(){document.body.removeClasses(this.classList)}onunload(){console.log("(SW-CM6) unloading Show Whitespace"),this.removeClasses()}async handleConfigFileChange(){await super.handleConfigFileChange(),this.onExternalSettingsChange()}async toggleExtension(i){i.settings.enabled=!i.settings.enabled,i.updateSettings(this.settings)}async loadSettings(){if(!this.settings){let i=await this.loadData();this.settings=Object.assign({},f,i);let s=E(this.manifest.version);b(s,this.settings.version)!=0&&(this.settings.version=s,await this.saveSettings())}}async updateSettings(i){this.settings=Object.assign({},this.settings,i),await this.saveSettings(),this.handleExtension(!1),console.log("(SW-CM6) settings and classes updated")}async saveSettings(){await this.saveData(this.settings)}};function b(a,t){return a.major===t.major?a.minor===t.minor?a.patch-t.patch:a.minor-t.minor:a.major-t.major}function E(a){let t=a.split(".");return{major:Number(t[0]),minor:Number(t[1]),patch:Number(t[2])}}var W=l;
